{"version":3,"file":"695.min.js","mappings":"yJAGA,MAAMA,GAAkBC,EAAAA,EAAAA,OACtB,IAAM,+BAEFC,GAAcD,EAAAA,EAAAA,OAClB,IAAM,+BAEFE,GAASF,EAAAA,EAAAA,OAAK,IAAM,qDAgC1B,UAxB2B,EAAEG,aAAWC,OAAKC,WAC3C,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,aACnBC,EAAcC,IAAmBF,EAAAA,EAAAA,YACxC,OACE,2BAASG,UAAU,aACjB,gBAAC,EAAAC,SAAQ,CAACC,SAAU,gBAAC,IAAiB,OACnCP,EACC,gBAACL,EAAW,CACVK,MAAOA,EACPC,SAAUA,EACVG,gBAAiBA,EACjBN,KAAMA,EACNC,KAAMA,IAENI,EACF,gBAACP,EAAM,CAACO,aAAcA,EAAcN,WAAYA,IAEhD,gBAACJ,EAAe,CAACQ,SAAUA,KAGvB,C","sources":["webpack:///./src/presentation/pages/image_converter/ImageConverterPage.tsx"],"sourcesContent":["import React, { lazy, Suspense, useState } from \"react\";\r\nimport SuspenseComponent from \"../../components/suspense/SuspenseComponent\";\r\n\r\nconst FileDragAndDrop = lazy(\r\n  () => import(\"../../components/drag_and_drop/FileDragAndDrop\")\r\n);\r\nconst ImageEditor = lazy(\r\n  () => import(\"../../components/image_editor/ImageEditor\")\r\n);\r\nconst Result = lazy(() => import(\"../../components/result/Result\"));\r\n\r\ntype Props = {\r\n  convert_to:\"lamp\"|\"brick\"\r\n  maxW:number,\r\n  maxH:number\r\n};\r\n\r\nconst ImageConverterPage = ({convert_to,maxW,maxH}: Props) => {\r\n  const [Image, setImage] = useState<HTMLImageElement>();\r\n  const [resultCanvas, setresultCanvas] = useState<HTMLCanvasElement>();\r\n  return (\r\n    <section className=\"container\">\r\n      <Suspense fallback={<SuspenseComponent/>}>\r\n        {Image ? (\r\n          <ImageEditor\r\n            Image={Image}\r\n            setImage={setImage}\r\n            setresultCanvas={setresultCanvas}\r\n            maxW={maxW}\r\n            maxH={maxH}\r\n          />\r\n        ) : resultCanvas ? (\r\n          <Result resultCanvas={resultCanvas} convert_to={convert_to} />\r\n        ) : (\r\n          <FileDragAndDrop setImage={setImage} />\r\n        )}\r\n      </Suspense>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ImageConverterPage;\r\n"],"names":["FileDragAndDrop","lazy","ImageEditor","Result","convert_to","maxW","maxH","Image","setImage","useState","resultCanvas","setresultCanvas","className","Suspense","fallback"],"sourceRoot":""}