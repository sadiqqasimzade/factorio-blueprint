{"version":3,"file":"573.min.js","mappings":"sUAWIA,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAA1B,IAKO,EAAe,KAAW,WAAiB,gBAAiBM,ECQnE,EA5BgBC,IACd,MAAMC,GAAiBC,EAAAA,EAAAA,aAAOH,GAU9B,OACE,uBAAKI,UAAWC,EAAAA,QACd,sBAAID,UAAWC,EAAAA,kBAAyB,4BACxC,yBACEC,YAAY,mBACZF,UAAWC,EAAAA,iBACXE,SAdsBC,IAC1B,IAAIC,EAAIP,EAAeQ,QACvB,IACED,EAAEE,UCNkBC,KACpBA,EAAYA,EAAUC,UAAU,GAApC,IACIC,EAAQC,EAAAA,GAAAA,KAAYH,EAAW,UAC/BI,GAAUC,EAAAA,EAAAA,IAAQH,EAAO,CAAEI,GAAI,WAC/BC,EAASC,KAAKC,MAAML,GACxB,OAAOI,KAAKE,UAAUH,EAAQ,KAAM,EAAE,EDCpBI,CAAiBf,EAAEgB,OAAOC,MAG1C,CAFE,MAAOC,GACPjB,EAAEE,UAAY,6CAChB,KAUE,qBACEP,UAAWC,EAAAA,kBACXsB,IAAKzB,EACL0B,QAASC,EAAAA,IAEP,E,SEMV,EA7BgB5B,IACd,MAAM6B,GAAiB3B,EAAAA,EAAAA,aAAOH,GAU9B,OACE,uBAAKI,UAAWC,EAAAA,QACd,sBAAID,UAAWC,EAAAA,kBAAyB,qBACxC,4BACED,UAAWC,EAAAA,iBACXC,YAAY,OACZC,SAdsBC,IAC1B,IAAIC,EAAIqB,EAAepB,QACvB,IACED,EAAEE,WAAYoB,EAAAA,EAAAA,GAAiBX,KAAKC,MAAMb,EAAEgB,OAAOC,OAGrD,CAFE,MAAOC,GACPjB,EAAEE,UAAY,8CAChB,GASIqB,KAAM,IAER,qBACEL,IAAKG,EACLF,QAASC,EAAAA,EACTzB,UAAWC,EAAAA,oBAET,EChBV,EAT0BJ,GAEtB,+BACE,gBAAC,EAAM,MACP,gBAAC,EAAM,M,4CCKb,IAR0BgC,IACxB,IAAIrB,EAAYQ,KAAKE,UAAUW,GAC5BC,QAAQ,kBAAmB,IAC3BA,QAAQ,SAAU,KACjBC,GAAUC,EAAAA,EAAAA,IAAQxB,EAAW,CAAEyB,MAAO,IAE1C,OAAO,EADKtB,EAAAA,GAAAA,KAAYoB,GAASG,SAAS,SAC1B,C,sBCdH,SAAST,EACtBrB,GAEA,IAAI+B,EAAO/B,EAAEgB,OACbgB,UAAUC,UAAUC,UAAUH,EAAK5B,WAAWgC,MAC5C,KACEC,QAAQC,IAAI,UAAU,IAEvBrC,IACCoC,QAAQC,IAAIrC,EAAE,GAGpB,C,oFCTIsC,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,+fAAggB,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,4EAA4E,MAAQ,GAAG,SAAW,2SAA2S,eAAiB,CAAC,0wCAA0wC,WAAa,MAE1vEH,EAAwBI,OAAS,CAChC,OAAU,uBACV,gBAAiB,uBACjB,gBAAiB,uBACjB,iBAAkB,wBAEnB,K","sources":["webpack:///./src/presentation/components/encode_decode/Decode.module.scss?6bc9","webpack:///./src/presentation/components/encode_decode/Decode.tsx","webpack:///./src/presentation/utils/convertors/Decoder.ts","webpack:///./src/presentation/components/encode_decode/Encode.tsx","webpack:///./src/presentation/pages/DecodeEncodePage.tsx","webpack:///./src/presentation/utils/convertors/Encoder.ts","webpack:///./src/presentation/utils/handlers/clickCopyHandler.tsx","webpack:///./src/presentation/components/encode_decode/Decode.module.scss"],"sourcesContent":["\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./Decode.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./Decode.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useRef } from \"react\";\r\nimport Decode_Blueprint from \"../../utils/convertors/Decoder\";\r\nimport clickCopyHandler from \"../../utils/handlers/clickCopyHandler\";\r\nimport styles from \"./Decode.module.scss\";\r\ntype Props = {};\r\n\r\nconst Decode = (props: Props) => {\r\n  const decodedTextRef = useRef(undefined);\r\n\r\n  const encodedInputChange = (e: React.ChangeEvent<any>) => {\r\n    var p = decodedTextRef.current as HTMLParagraphElement;\r\n    try {\r\n      p.innerText = Decode_Blueprint(e.target.value);\r\n    } catch (error) {\r\n      p.innerText = 'Cant parse given blueprint sting to json =(';\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles[\"decode\"]}>\r\n      <h2 className={styles[\"decode--title\"]}>Blueprint string =&gt; json</h2>\r\n      <input\r\n        placeholder=\"Blueprint string\"\r\n        className={styles[\"decode--input\"]}\r\n        onChange={encodedInputChange}\r\n      ></input>\r\n      <p\r\n        className={styles[\"decode--result\"]}\r\n        ref={decodedTextRef}\r\n        onClick={clickCopyHandler}\r\n      ></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Decode;\r\n","import { inflate } from \"pako\";\r\nimport { Buffer } from \"buffer\";\r\n/**\r\n    Converts factorio base64 blueprint string to stringified json\r\n    @param blueprint factorio base64 blueprint string\r\n   */\r\nconst Decode_Blueprint = (blueprint: string): string => {\r\n  var blueprint = blueprint.substring(1);\r\n  var based = Buffer.from(blueprint, \"base64\");\r\n  var decoded = inflate(based, { to: \"string\" });\r\n  var jsoned = JSON.parse(decoded);\r\n  return JSON.stringify(jsoned, null, 2);\r\n};\r\nexport default Decode_Blueprint;\r\n","import React, { useRef } from \"react\";\r\nimport Encode_Blueprint from \"../../utils/convertors/Encoder\";\r\nimport clickCopyHandler from \"../../utils/handlers/clickCopyHandler\";\r\nimport styles from \"./Decode.module.scss\";\r\n\r\ntype Props = {};\r\n\r\nconst Encode = (props: Props) => {\r\n  const encodedTextRef = useRef(undefined);\r\n\r\n  const decodedInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    var p = encodedTextRef.current as HTMLParagraphElement;\r\n    try {\r\n      p.innerText = Encode_Blueprint(JSON.parse(e.target.value));\r\n    } catch (error) {\r\n      p.innerText = \"Cant parse given json to blueprint sting  =(\";\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles[\"decode\"]}>\r\n      <h2 className={styles[\"decode--title\"]}>Json =&gt; Blueprint</h2>\r\n      <textarea\r\n        className={styles[\"decode--input\"]}\r\n        placeholder=\"Json\"\r\n        onChange={decodedInputChange}\r\n        rows={3}\r\n      ></textarea>\r\n      <p\r\n        ref={encodedTextRef}\r\n        onClick={clickCopyHandler}\r\n        className={styles[\"decode--result\"]}\r\n      ></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Encode;\r\n","import React from \"react\";\r\nimport Decode from \"../components/encode_decode/Decode\";\r\nimport Encode from \"../components/encode_decode/Encode\";\r\n\r\n\r\ntype Props = {};\r\n\r\nconst DecodeEncodePage = (props: Props) => {\r\n  return (\r\n    <section>\r\n      <Decode />\r\n      <Encode />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DecodeEncodePage;\r\n","import { deflate } from \"pako\";\r\nimport { Blueprint } from \"../../../domain/entity/models/Blueprint\";\r\nimport { Buffer } from \"buffer\";\r\n\r\n/**\r\n * encodes given json to factorio base64 blueprint string\r\n * @param myjson blueprint json\r\n */\r\nconst Encode_Blueprint = (myjson: { blueprint: Blueprint }): string => {\r\n  var blueprint = JSON.stringify(myjson)\r\n    .replace(/(null)|(,null)/g, \"\")\r\n    .replace(/(\\[,)/g, \"[\");\r\n  var encoded = deflate(blueprint, { level: 9 });\r\n  var based = Buffer.from(encoded).toString(\"base64\");\r\n  return 0 + based;\r\n};\r\nexport default Encode_Blueprint\r\n","export default function clickCopyHandler(\r\n  e: React.MouseEvent<any, MouseEvent>\r\n): void {\r\n  var text = e.target as HTMLElement;\r\n  navigator.clipboard.writeText(text.innerText).then(\r\n    () => {\r\n      console.log(\"success\");\r\n    },\r\n    (e) => {\r\n      console.log(e);\r\n    }\r\n  );\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".QyZw86ij35rVlXy9NBzu{color:#fff;background:linear-gradient(#141e30, #243b55);margin:50px;border-radius:20px;padding:20px;border:5px solid gray}.UmiRXnMjSMPWAdr6JZVk{text-align:center}.BSLRRLUInEVBEgaTiXLi{border:none;border-bottom:1px solid #fff;background:rgba(0,0,0,0);padding:10px 0;width:100%;outline:none;color:#fff;max-width:100%}.BSLRRLUInEVBEgaTiXLi::placeholder{color:#fff}.cCCg5dIvRa6pVujVA7ag{max-height:500px;min-height:100px;overflow:auto;margin-top:20px;transition:1s all;word-break:break-all}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/components/encode_decode/Decode.module.scss\"],\"names\":[],\"mappings\":\"AAaA,sBACE,UAdkB,CAelB,4CAdkB,CAelB,WAdc,CAed,kBAdqB,CAerB,YAde,CAef,qBAdc,CAed,sBACE,iBAAA,CAEF,sBACE,WAAA,CACA,4BAnBkB,CAoBlB,wBAAA,CACA,cApBmB,CAqBnB,UAAA,CACA,YAAA,CACA,UAtBiB,CAuBjB,cAAA,CACA,mCACE,UAzBe,CA4BnB,sBACE,gBA3BiB,CA4BjB,gBA3BiB,CA4BjB,aAAA,CACA,eA5BmB,CA6BnB,iBAhCuB,CAiCvB,oBAAA\",\"sourcesContent\":[\"$decode-text-color: #fff;\\r\\n$decode-background: linear-gradient(#141e30, #243b55);\\r\\n$decode-margin: 50px;\\r\\n$decode-border-radius: 20px;\\r\\n$decode-padding: 20px;\\r\\n$decode-border: 5px solid gray;\\r\\n$decode-input-border: 1px solid #fff;\\r\\n$decode-input-padding: 10px 0;\\r\\n$decode-input-color: #fff;\\r\\n$decode-result-transition: 1s all;\\r\\n$decode-result-maxh: 500px;\\r\\n$decode-result-minh: 100px;\\r\\n$decode-result-margin: 20px;\\r\\n.decode {\\r\\n  color: $decode-text-color;\\r\\n  background: $decode-background;\\r\\n  margin: $decode-margin;\\r\\n  border-radius: $decode-border-radius;\\r\\n  padding: $decode-padding;\\r\\n  border: $decode-border;\\r\\n  &--title {\\r\\n    text-align: center;\\r\\n  }\\r\\n  &--input {\\r\\n    border: none;\\r\\n    border-bottom: $decode-input-border;\\r\\n    background: transparent;\\r\\n    padding: $decode-input-padding;\\r\\n    width: 100%;\\r\\n    outline: none;\\r\\n    color: $decode-input-color;\\r\\n    max-width: 100%;\\r\\n    &::placeholder {\\r\\n      color: $decode-input-color;\\r\\n    }\\r\\n  }\\r\\n  &--result {\\r\\n    max-height: $decode-result-maxh;\\r\\n    min-height: $decode-result-minh;\\r\\n    overflow: auto;\\r\\n    margin-top: $decode-result-margin;\\r\\n    transition: $decode-result-transition;\\r\\n    word-break: break-all;\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"decode\": \"QyZw86ij35rVlXy9NBzu\",\n\t\"decode--title\": \"UmiRXnMjSMPWAdr6JZVk\",\n\t\"decode--input\": \"BSLRRLUInEVBEgaTiXLi\",\n\t\"decode--result\": \"cCCg5dIvRa6pVujVA7ag\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","props","decodedTextRef","useRef","className","styles","placeholder","onChange","e","p","current","innerText","blueprint","substring","based","Buffer","decoded","inflate","to","jsoned","JSON","parse","stringify","Decode_Blueprint","target","value","error","ref","onClick","clickCopyHandler","encodedTextRef","Encode_Blueprint","rows","myjson","replace","encoded","deflate","level","toString","text","navigator","clipboard","writeText","then","console","log","___CSS_LOADER_EXPORT___","push","module","id","locals"],"sourceRoot":""}