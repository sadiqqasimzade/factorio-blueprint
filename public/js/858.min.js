"use strict";(self.webpackChunkfactorio_blueprint=self.webpackChunkfactorio_blueprint||[]).push([[858],{858:function(e,t,n){n.r(t);var r=n(294);t.default=function(){const[e,t]=(0,r.useState)(null),[n,o]=(0,r.useState)([]);return(0,r.useEffect)((()=>{if(e){const t=new FileReader;t.onload=()=>{(new AudioContext).decodeAudioData(t.result).then((e=>{(function(e){const t=new OfflineAudioContext(e.numberOfChannels,e.length,e.sampleRate),n=t.createBufferSource();n.buffer=e;const r=t.createAnalyser();return r.fftSize=1024,n.connect(r),r.connect(t.destination),n.start(18,0,1),t.startRendering(),new Promise(((e,n)=>{t.oncomplete=t=>{const n=t.renderedBuffer,o=[];for(let e=0;e<n.length;e+=1/n.duration){const t=n.duration*(e/n.length),a=new Uint8Array(r.frequencyBinCount);r.getByteFrequencyData(a),console.log(e),o.push([t,...a])}e(o)}}))})(e).then((e=>{o(e)}))}))},t.readAsArrayBuffer(e)}}),[e]),r.createElement("div",null,r.createElement("input",{type:"file",accept:"audio/*",onChange:e=>{const n=e.target.files;n&&n[0]&&t(n[0])}}),n.map((([e,...t],n)=>r.createElement("div",{style:{color:"white",fontSize:"18px"},key:n},r.createElement("div",null,e),r.createElement("div",null,t.slice(0,14).join(", "))))))}}}]);
//# sourceMappingURL=858.min.js.map